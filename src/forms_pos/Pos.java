package forms_pos;

//import Writesheet.KartonExcel;
//import Writesheet.KartonExcel1;
//import Writesheet.KartonExcelGenerator;
//import Writesheet.KartonExcelSvi;
//import Writesheet.PodaciURedu;
import forms_pos.Main.ac;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.security.CodeSource;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import konekcija.konekcija;
import javax.swing.*;
import maticni.MaticniPodaci;
import maticni.MaticniPodaciSaNapomenom;
import maticni.PoreskeTarife;
import maticni.PttBrojevi;
import maticni.artikli.Pakovanja;
import maticni.artikli.TrazenjeArtikala;
import maticni.cenovnik.Akcije;
import maticni.cenovnik.Cenovnik;
import maticni.partneri.TrazenjePartnera;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import terminal_pos.Terminal;
import terminal_pos.TerminalPanel;
//import maticni.MaticniPodaci;
//import maticni.MaticniPodaciSaNapomenom;
//import maticni.PttBrojevi;
//import maticni.Ustanova;
//import maticni.Zupa;
//import net.sf.jasperreports.engine.JRException;
//import net.sf.jasperreports.engine.JasperCompileManager;
//import net.sf.jasperreports.engine.JasperFillManager;
//import net.sf.jasperreports.engine.JasperPrint;
//import net.sf.jasperreports.engine.JasperReport;
//import net.sf.jasperreports.view.JasperViewer;

public class Pos extends javax.swing.JFrame {

    Pos parent = this;
    public Connection conn;

    public Pos() {

        initComponents();
        konekcija n = new konekcija();
        conn = n.konekcija();
        setLocationRelativeTo(null);

        setWallie();
        setFlags();
//       Main.ac.log.error("ovo je smesno");  // NOI18N
//       Main m = new Main();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        DodavanjeBtn = new javax.swing.JButton();
        TrazenjePersoneBtn = new javax.swing.JButton();
        PartnersBtn = new javax.swing.JButton();
        PrintBtn1 = new javax.swing.JButton();
        IzlazBtn = new javax.swing.JButton();
        DodavanjeBtn1 = new javax.swing.JButton();
        ArtikliBtn2 = new javax.swing.JButton();
        TrazenjePersoneBtn1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Personal = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuBanke = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuOslovljavanjeZupa = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuDrugeUstanove = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem11 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuTipEntiteta = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem29 = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        jMenuItem16 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jMenuItem30 = new javax.swing.JMenuItem();
        jMenuItem31 = new javax.swing.JMenuItem();
        jMenuItem32 = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem28 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Smart POS");

        jToolBar1.setRollover(true);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/smartPOS3.jpg"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        DodavanjeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/cashbox-icon.png"))); // NOI18N
        DodavanjeBtn.setText("SmartPOS");
        DodavanjeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodavanjeBtnActionPerformed(evt);
            }
        });

        TrazenjePersoneBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/Barcode-icon-48.png"))); // NOI18N
        TrazenjePersoneBtn.setText("Pakovanja");
        TrazenjePersoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrazenjePersoneBtnActionPerformed(evt);
            }
        });

        PartnersBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove1/partners-50.jpg"))); // NOI18N
        PartnersBtn.setText("Partneri");
        PartnersBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PartnersBtnActionPerformed(evt);
            }
        });

        PrintBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/price-tag-icon-48.png"))); // NOI18N
        PrintBtn1.setText("Cenovnik");
        PrintBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintBtn1ActionPerformed(evt);
            }
        });

        IzlazBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/Button-Close-icon.png"))); // NOI18N
        IzlazBtn.setText("Izlaz");
        IzlazBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IzlazBtnActionPerformed(evt);
            }
        });

        DodavanjeBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/search-good-icon-48.png"))); // NOI18N
        DodavanjeBtn1.setText("Artikli");
        DodavanjeBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DodavanjeBtn1ActionPerformed(evt);
            }
        });

        ArtikliBtn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/EVE-icon-48.png"))); // NOI18N
        ArtikliBtn2.setText("Artikli");
        ArtikliBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArtikliBtn2ActionPerformed(evt);
            }
        });

        TrazenjePersoneBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/sale-icon-48.png"))); // NOI18N
        TrazenjePersoneBtn1.setText("Akcije");
        TrazenjePersoneBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrazenjePersoneBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PartnersBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(DodavanjeBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DodavanjeBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                    .addComponent(ArtikliBtn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(IzlazBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(PrintBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TrazenjePersoneBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TrazenjePersoneBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DodavanjeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DodavanjeBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrintBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ArtikliBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TrazenjePersoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TrazenjePersoneBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IzlazBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PartnersBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/pos-small.jpg"))); // NOI18N

        jLabel5.setText("*");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 204));
        jLabel4.setText("jLabel4");

        jMenuBar1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        Personal.setText("Prodaja");
        Personal.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        Personal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PersonalActionPerformed(evt);
            }
        });

        jMenuItem1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/poruka_stigla_green.png"))); // NOI18N
        jMenuItem1.setText("Unos");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        Personal.add(jMenuItem1);

        jMenuItem17.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem17.setText("Izmena");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        Personal.add(jMenuItem17);

        jMenuBar1.add(Personal);

        jMenu1.setText("Matični podaci");
        jMenu1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jMenuItem2.setText("Ptt brojevi");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem12.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem12.setText("Države");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem12);

        jMenuItem10.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem10.setText("Opštine");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem10);

        jMenuBanke.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuBanke.setText("Banke");
        jMenuBanke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBankeActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuBanke);
        jMenu1.add(jSeparator1);

        jMenuItem3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem3.setText("Tip artikla");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuOslovljavanjeZupa.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuOslovljavanjeZupa.setText("Način plaćanja");
        jMenuOslovljavanjeZupa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOslovljavanjeZupaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuOslovljavanjeZupa);
        jMenu1.add(jSeparator2);

        jMenuDrugeUstanove.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuDrugeUstanove.setText("Jedinice mere");
        jMenuDrugeUstanove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuDrugeUstanoveActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuDrugeUstanove);

        jMenuItem4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem4.setText("Odeljenja");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator5);

        jMenuItem5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem5.setText("Artikli");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem8.setText("Partneri");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);
        jMenu1.add(jSeparator4);

        jMenuItem11.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem11.setText("Klasifikacija artikala");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);
        jMenu1.add(jSeparator3);

        jMenuItem21.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem21.setText("Poreske tarife");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem21);

        jMenuItem7.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem7.setText("Poruke");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);
        jMenu1.add(jSeparator6);

        jMenuTipEntiteta.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuTipEntiteta.setText("Vrste pakovanja artikla");
        jMenuTipEntiteta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTipEntitetaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuTipEntiteta);

        jMenuItem6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem6.setText("Ambalaža");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Izveštaji");
        jMenu2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jMenuItem27.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem27.setText("Pregled aktuelnog cenovnika");
        jMenuItem27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem27ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem27);

        jMenuItem29.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem29.setText("Pregled pakovanja artikala");
        jMenuItem29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem29ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem29);
        jMenu2.add(jSeparator10);

        jMenuItem16.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem16.setText("Pregled artikala");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem16);
        jMenu2.add(jSeparator7);

        jMenuItem30.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem30.setText("Pregled komitenata");
        jMenuItem30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem30ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem30);

        jMenuItem31.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem31.setText("Kartice artikala");
        jMenuItem31.setToolTipText("Štampa velikih koverti");
        jMenuItem31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem31ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem31);

        jMenuItem32.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem32.setText("Stanje zaliha na dan");
        jMenuItem32.setToolTipText("");
        jMenuItem32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem32ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem32);
        jMenu2.add(jSeparator11);

        jMenuItem23.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem23.setText("Osnovni podaci - Excel");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem23);

        jMenuItem26.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem26.setText("Osnovni podaci");
        jMenuItem26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem26ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem26);

        jMenuItem24.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem24.setText("Karton - Excel");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem24);

        jMenuItem25.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem25.setText("Excel - generisani podaci");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem25);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Servis");
        jMenu3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jMenuItem18.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem18.setText("Kopija podataka");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem18);

        jMenuItem19.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem19.setText("Restauracija podataka");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem19);

        jMenuItem28.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jMenuItem28.setText("Prijave");
        jMenuItem28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem28ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem28);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(83, 83, 83))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      Thread t2 = new Thread(new Runnable() {
          public void run() {
              TerminalPanel ap = new TerminalPanel(conn, "UNOS", "");
              ap.setVisible(true);
          }
      });
      t2.start();
//      Terminal ap = new Terminal();
//      ap.setVisible(true);
  }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void DodavanjeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodavanjeBtnActionPerformed
        Thread t2 = new Thread(new Runnable() {
            public void run() {
                TerminalPanel ap = new TerminalPanel(conn, "UNOS", "");
                ap.setVisible(true);
            }
        });
        t2.start();
//        TerminalPanel ap = new TerminalPanel(conn, "UNOS", "");
//        ap.setVisible(true);
    }//GEN-LAST:event_DodavanjeBtnActionPerformed

    private void IzlazBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IzlazBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_IzlazBtnActionPerformed

    private void PartnersBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PartnersBtnActionPerformed
        TrazenjePartnera sr = new TrazenjePartnera(conn, "artikli");
        sr.setVisible(true);
//        Thread t1 = new Thread(new Runnable() {
//            public void run() {
//                try {
//                    String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\pregledPersonalaReport1.jrxml";
//                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
//                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                    JasperViewer.viewReport(jp, false);
//                } catch (JRException ex) {
//                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        t1.start();
    }//GEN-LAST:event_PartnersBtnActionPerformed

    private void TrazenjePersoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrazenjePersoneBtnActionPerformed
        // TODO add your handling code here:
        Pakovanja sr = new Pakovanja(conn, "artikli_pakovanja", "");
        sr.setVisible(true);
//        TrazenjePersone tp = new TrazenjePersone();
//        tp.setVisible(true);
    }//GEN-LAST:event_TrazenjePersoneBtnActionPerformed

    private void PrintBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintBtn1ActionPerformed
        // TODO add your handling code here:
        Cenovnik sr = new Cenovnik(conn, "cenovnik", "");
        sr.setVisible(true);
//              Thread t1 = new Thread(new Runnable() {
//            public void run() {
//                try {
//                    String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\karton.jrxml";
//                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
//                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                    JasperViewer.viewReport(jp, false);
//                } catch (JRException ex) {
//                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        t1.start();  
    }//GEN-LAST:event_PrintBtn1ActionPerformed

    private void PersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PersonalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PersonalActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        // TODO add your handling code here:
//                TrazenjePersone tp = new TrazenjePersone();
//        tp.setVisible(true);
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
//                Thread t1 = new Thread(new Runnable() {
//            public void run() {
//                try {
//                    String reportPath = service.uzmiParametar.uzmiParametar(conn, "putanja_izvestaja").concat("pregledPersonalaReport1.jrxml");
//                   //  String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\pregledPersonalaReport1.jrxml";
//                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
//                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                    JasperViewer.viewReport(jp, false);
//                } catch (JRException ex) {
//                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        t1.start();
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        // TODO add your handling code here:
        Backupdbtosql();
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        // TODO add your handling code here:
        String s = "a";
        Restoredbfromsql(s);
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        // TODO add your handling code here:
//        KartonExcel ke = new KartonExcel();
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        // TODO add your handling code here:
//        KartonExcel1 ke1 = new KartonExcel1();
//        KartonExcelSvi kes = new KartonExcelSvi("");
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        // TODO add your handling code here:
//        KartonExcelGenerator keg = new KartonExcelGenerator();
        jLabel3.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/wallie.gif")));
//        jLabel4 = new JLabel(new ImageIcon(getClass().getResource("/images/Logo1.png")));
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void jMenuItem26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem26ActionPerformed
        // TODO add your handling code here:
//        PodaciURedu pur = new PodaciURedu();
    }//GEN-LAST:event_jMenuItem26ActionPerformed

    private void jMenuItem28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem28ActionPerformed
        // TODO add your handling code here:
//                    if (Prijava.getKosam()) {
//                                MaticniPodaci sr = new MaticniPodaci(conn, "reg");
//        sr.setVisible(true);
//            }

    }//GEN-LAST:event_jMenuItem28ActionPerformed

    private void jMenuItem27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem27ActionPerformed
        // TODO add your handling code here:
        Thread t1 = new Thread(new Runnable() {
            public void run() {
                try {
                    // create temporory table
                    createTemporaryTable();
                    // end create temporary table

                    String reportPath = service.uzmiParametar.uzmiParametar(conn, "putanja_izvestaja").concat("report4.jrxml");
                    //  String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\pregledPersonalaReport1.jrxml";
                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
                    JasperViewer.viewReport(jp, false);
                } catch (JRException ex) {
                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            private void createTemporaryTable() throws SQLException {

                Connection dbConnection = null;
                PreparedStatement preparedStatement = null;

                String createTableSQL = "CREATE TEMPORARY TABLE CENOVNIK1 ("
                        + "USER_ID NUMBER(5) NOT NULL, "
                        + "SIFRA VARCHAR(20) NOT NULL, "
                        + "NAZIV VARCHAR(50) NOT NULL, "
                        + "NETO  DECIMAL(15,3) NOT NULL, "
                        + "CENABEZPDV  DECIMAL(15,2) NOT NULL, "
                        + "MALOPRODAJNACENA  DECIMAL(15,2) NOT NULL, "
                        + "CREATED_BY VARCHAR(20) NOT NULL, "
                        + "CREATED_DATE DATE NOT NULL, " + "PRIMARY KEY (USER_ID) "
                        + ")";

                try {
//                    dbConnection = getDBConnection();
                    preparedStatement = conn.prepareStatement(createTableSQL);

                    System.out.println(createTableSQL);

                    // execute create SQL stetement
                    preparedStatement.executeUpdate();

                    System.out.println("Table \"cenovnik1\" is created!");

                } catch (SQLException e) {

                    System.out.println(e.getMessage());

                } finally {

                    if (preparedStatement != null) {
                        preparedStatement.close();
                    }

                    if (dbConnection != null) {
                        dbConnection.close();
                    }

                }

                // insert into temporary file
                try {
                    String SQLinsertPakovanja = " insert into "
                            + " cenovnik1 ("
                            + " artikal_id, artikal_sifra, "
                            + " tippak, ean, \n"
                            + "                naziv, jm, netojm, \n"
                            + " brutojm, \n"
                            + " sirina, visina, duzina, komada,  aktivan, \n"
                            + "                sifra_ambalaze, tezina ) \n"
                            + "values ( ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

                    PreparedStatement stmt
                            = conn.prepareStatement(SQLinsertPakovanja, Statement.RETURN_GENERATED_KEYS);

//                    stmt.setInt(1, vrati_id_za_sifru(conn, "artikli", mSifra.getText()));
//                    stmt.setString(2, mSifra.getText());
//                    stmt.setInt(3, vrati_id_za_naziv(conn, "vrste_pakovanja_artikala", mVrstaPakovanjaArtikala.getSelectedItem().toString()));
//                    stmt.setString(4, mEAN.getText());
//                    stmt.setString(5, "");
//                    stmt.setString(6, "");
//                    stmt.setDouble(7, mNetoUJm.getValueDFP().doubleValue());
//                    stmt.setDouble(8, mBrutoUJm.getValueDFP().doubleValue());
//                    stmt.setDouble(9, mSirina.getValueDFP().doubleValue());
//                    stmt.setDouble(10, mVisina.getValueDFP().doubleValue());
//                    stmt.setDouble(11, mDuzina.getValueDFP().doubleValue());
//                    stmt.setDouble(12, mKomada.getValueDFP().doubleValue());
//                    stmt.setInt(13, 1);
//                    stmt.setInt(14, vrati_id_za_naziv(conn, "ambalaza", mAmbalaza.getSelectedItem().toString()));
//                    stmt.setDouble(15, mTezina.getValueDFP().doubleValue());
//
//                    if (uzmiParametar(conn, "debugiranje").equals("1")) {
//                        System.out.println(stmt);
//                    }
//                    int i = stmt.executeUpdate();
//
//                    iMessage.setText("Podatak je uspesno dodat ...");
//                    MyLogger.logger.info("Podatak je uspesno dodat " + mSifra.getText());
                } catch (Exception e) {

//                    iMessage.setText(e.toString());
//                    MyLogger.logger.error(e);
                }

                // end of insert
            }

        });
        t1.start();
    }//GEN-LAST:event_jMenuItem27ActionPerformed

    private void jMenuItem29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem29ActionPerformed
        // TODO add your handling code here:
//                                Thread t1 = new Thread(new Runnable() {
//            public void run() {
//                try {
//                    String reportPath = service.uzmiParametar.uzmiParametar(conn, "putanja_izvestaja").concat("report5.jrxml");
//                   //  String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\pregledPersonalaReport1.jrxml";
//                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
//                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                    JasperViewer.viewReport(jp, false);
//                } catch (JRException ex) {
//                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        t1.start();
    }//GEN-LAST:event_jMenuItem29ActionPerformed

    private void jMenuItem30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem30ActionPerformed
        // TODO add your handling code here:
//            Thread t1 = new Thread(new Runnable() {
//            public void run() {
//                try {
//                    String reportPath = service.uzmiParametar.uzmiParametar(conn, "putanja_izvestaja").concat("koverteZupa1.jrxml");
//                   //  String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\pregledPersonalaReport1.jrxml";
//                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
//                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                    JasperViewer.viewReport(jp, false);
//                } catch (JRException ex) {
//                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        t1.start();
    }//GEN-LAST:event_jMenuItem30ActionPerformed

    private void jMenuItem31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem31ActionPerformed
        // TODO add your handling code here:
//            Thread t1 = new Thread(new Runnable() {
//            public void run() {
//                try {
//                    String reportPath = service.uzmiParametar.uzmiParametar(conn, "putanja_izvestaja").concat("koverteZupaVelika.jrxml");
//                   //  String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\pregledPersonalaReport1.jrxml";
//                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
//                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                    JasperViewer.viewReport(jp, false);
//                } catch (JRException ex) {
//                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        t1.start();
    }//GEN-LAST:event_jMenuItem31ActionPerformed

    private void jMenuItem32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem32ActionPerformed
        // TODO add your handling code here:
//                    Thread t1 = new Thread(new Runnable() {
//            public void run() {
//                try {
//                    String reportPath = service.uzmiParametar.uzmiParametar(conn, "putanja_izvestaja").concat("sveceniciDuga.jrxml");
//                   //  String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\pregledPersonalaReport1.jrxml";
//                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
//                    JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
//                    JasperViewer.viewReport(jp, false);
//                } catch (JRException ex) {
//                    Logger.getLogger(Pos.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//        t1.start();
    }//GEN-LAST:event_jMenuItem32ActionPerformed

    private void jMenuTipEntitetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTipEntitetaActionPerformed
        // TODO add your handling code here:
        MaticniPodaci sr = new MaticniPodaci(conn, "vrste_pakovanja");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuTipEntitetaActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        // TODO add your handling code here:
        //                MaticniPodaci sr = new MaticniPodaci(conn, "ustanove");
//                        Ustanova us = new Ustanova(conn, "ustanove");
//                us.setVisible(true);
        PoreskeTarife sr = new PoreskeTarife(conn, "poreska_tarifa");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        MaticniPodaci sr = new MaticniPodaci(conn, "klasifikacija_artikala");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        TrazenjeArtikala sr = new TrazenjeArtikala(conn, "artikli");
        sr.setVisible(true);

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        MaticniPodaci sr = new MaticniPodaci(conn, "odeljenje");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuDrugeUstanoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuDrugeUstanoveActionPerformed
        // TODO add your handling code here:
        MaticniPodaci sr = new MaticniPodaci(conn, "jedinica_mere");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuDrugeUstanoveActionPerformed

    private void jMenuOslovljavanjeZupaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOslovljavanjeZupaActionPerformed
        // TODO add your handling code here:
        MaticniPodaci sr = new MaticniPodaci(conn, "nacin_placanja");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuOslovljavanjeZupaActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        //        MaticniPodaci sr = new MaticniPodaci(conn, "drzavljanstvo");
        //        sr.setVisible(true);
        MaticniPodaci sr = new MaticniPodaci(conn, "tip_artikla");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuBankeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBankeActionPerformed
        // TODO add your handling code here:
        MaticniPodaciSaNapomenom sr = new MaticniPodaciSaNapomenom(conn, "banke");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuBankeActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        MaticniPodaci sr = new MaticniPodaci(conn, "opstina");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        MaticniPodaci sr = new MaticniPodaci(conn, "drzave");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        PttBrojevi sr = new PttBrojevi(conn, "ptt_brojevi");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void DodavanjeBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DodavanjeBtn1ActionPerformed
        // TODO add your handling code here:
        TrazenjeArtikala sr = new TrazenjeArtikala(conn, "artikli");
        sr.setVisible(true);
    }//GEN-LAST:event_DodavanjeBtn1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        MaticniPodaci sr = new MaticniPodaci(conn, "poruke");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void ArtikliBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArtikliBtn2ActionPerformed
        // TODO add your handling code here:
        TrazenjeArtikala sr = new TrazenjeArtikala(conn, "artikli");
        sr.setVisible(true);
    }//GEN-LAST:event_ArtikliBtn2ActionPerformed

    private void TrazenjePersoneBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrazenjePersoneBtn1ActionPerformed
        // TODO add your handling code here:
        Akcije sr = new Akcije(conn, "akcije", "");
        sr.setVisible(true);
    }//GEN-LAST:event_TrazenjePersoneBtn1ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        TrazenjePartnera sr = new TrazenjePartnera(conn, "artikli");
        sr.setVisible(true);
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ArtikliBtn2;
    private javax.swing.JButton DodavanjeBtn;
    private javax.swing.JButton DodavanjeBtn1;
    private javax.swing.JButton IzlazBtn;
    private javax.swing.JButton PartnersBtn;
    private javax.swing.JMenu Personal;
    private javax.swing.JButton PrintBtn1;
    private javax.swing.JButton TrazenjePersoneBtn;
    private javax.swing.JButton TrazenjePersoneBtn1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuBanke;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuDrugeUstanove;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem30;
    private javax.swing.JMenuItem jMenuItem31;
    private javax.swing.JMenuItem jMenuItem32;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuOslovljavanjeZupa;
    private javax.swing.JMenuItem jMenuTipEntiteta;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private void Backupdbtosql() {
        try {

            /*NOTE: Getting path to the Jar file being executed*/
            /*NOTE: YourImplementingClass-> replace with the class executing the code*/
            CodeSource codeSource = Pos.class.getProtectionDomain().getCodeSource();
            File jarFile = new File(codeSource.getLocation().toURI().getPath());
            String jarDir = jarFile.getParentFile().getPath();


            /*NOTE: Creating Database Constraints*/
            String dbName = "personal";
            String dbUser = "root";
            String dbPass = "";

            /*NOTE: Creating Path Constraints for folder saving*/
            /*NOTE: Here the backup folder is created for saving inside it*/
            String folderPath = jarDir + "\\backup";

            /*NOTE: Creating Folder if it does not exist*/
            File f1 = new File(folderPath);
            f1.mkdir();

            /*NOTE: Creating Path Constraints for backup saving*/
            /*NOTE: Here the backup is saved in a folder called backup with the name backup.sql*/
            String savePath = "\"" + jarDir + "\\backup\\" + "backup.sql\"";

            /*NOTE: Used to create a cmd command*/
            String executeCmd = "mysqldump -u" + dbUser + " -p" + dbPass + " --database " + dbName + " -r " + savePath;

            /*NOTE: Executing the command here*/
            Process runtimeProcess = Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();

            /*NOTE: processComplete=0 if correctly executed, will contain other values if not*/
            if (processComplete == 0) {
                System.out.println("Backup Complete");
            } else {
                System.out.println("Backup Failure");
            }

        } catch (URISyntaxException | IOException | InterruptedException ex) {
            JOptionPane.showMessageDialog(null, "Error at Backuprestore" + ex.getMessage());
        }
    }

    private void Restoredbfromsql(String s) {
        try {
            /*NOTE: String s is the mysql file name including the .sql in its name*/
            /*NOTE: Getting path to the Jar file being executed*/
            /*NOTE: YourImplementingClass-> replace with the class executing the code*/
            CodeSource codeSource = Pos.class.getProtectionDomain().getCodeSource();
            File jarFile = new File(codeSource.getLocation().toURI().getPath());
            String jarDir = jarFile.getParentFile().getPath();

            /*NOTE: Creating Database Constraints*/
            String dbName = "YourDBName";
            String dbUser = "YourUserName";
            String dbPass = "YourUserPassword";

            /*NOTE: Creating Path Constraints for restoring*/
            String restorePath = jarDir + "\\backup" + "\\" + s;

            /*NOTE: Used to create a cmd command*/
            /*NOTE: Do not create a single large string, this will cause buffer locking, use string array*/
            String[] executeCmd = new String[]{"mysql", dbName, "-u" + dbUser, "-p" + dbPass, "-e", " source " + restorePath};

            /*NOTE: processComplete=0 if correctly executed, will contain other values if not*/
            Process runtimeProcess = Runtime.getRuntime().exec(executeCmd);
            int processComplete = runtimeProcess.waitFor();

            /*NOTE: processComplete=0 if correctly executed, will contain other values if not*/
            if (processComplete == 0) {
                JOptionPane.showMessageDialog(null, "Successfully restored from SQL : " + s);
            } else {
                JOptionPane.showMessageDialog(null, "Error at restoring");
            }

        } catch (URISyntaxException | IOException | InterruptedException | HeadlessException ex) {
            JOptionPane.showMessageDialog(null, "Error at Restoredbfromsql" + ex.getMessage());
        }

    }

//    private void setWallie() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
    public void setWallie() {
        ActionListener actiondate = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                java.util.Date mydate = new java.util.Date();
                SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy hh:mm:ss");
                String date = sdf.format(new java.util.Date());
                jLabel4.setText(date);
                if (mydate.getSeconds() > 10 && mydate.getSeconds() < 20) {
//                SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy hh:mm:ss");
//                String date = sdf.format(new java.util.Date());
//                System.out.println(date); //15/10/2013
                    jLabel3.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/wallie.gif")));
//                    jLabel3.setText(date);

                } else if (mydate.getSeconds() > 20 && mydate.getSeconds() < 30) {
                    jLabel3.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/smartpos3.jpg")));
                } else if (mydate.getSeconds() > 30 && mydate.getSeconds() < 40) {
                    jLabel3.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/EVE-icon-512.png")));
                } else if (mydate.getSeconds() > 40 && mydate.getSeconds() < 50) {
                    jLabel3.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/Wall-E-icon-512.png")));
                } else if (mydate.getSeconds() > 50 && mydate.getSeconds() < 60) {
                    jLabel3.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/smartpos3.jpg")));
                }
//                jLabel3.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/wallie.gif")));
            }

        };
        new javax.swing.Timer(1000, actiondate).start();
    }

    public void setFlags() {
        
//        File f = new File("/flags/");
//        final File[] allSubFiles = f.listFiles();
//        for (File file : allSubFiles) {
//            if (file.isDirectory()) {
//                System.out.println(file.getAbsolutePath() + " is directory");
//                //Steps for directory
//            } else {
//                System.out.println(file.getAbsolutePath() + " is file");
//                //steps for files
//            }
//        }
        
//        final String[] allSubFiles = {"/flags/Macedonia-icon-64.png", 
//            "/flags/Serbia-Flag-icon-64.png", "/flags/Slovenia-icon-64.png", 
//            "/flags/Bosnian-icon-64.png", "/flags/Montenegro-icon-64.png", 
//            "/flags/Kosovo-icon-64.png", "/flags/Croatia-flat-icon-64.png" };

        final String[] allSubFiles = {"/flags/Macedonia-Flag-icon-48.png", 
            "/flags/Bosnian-Flag-icon-48.png", "/flags/Croatian-Flag-icon-48.png", 
            "/flags/Ex-Yugoslavia-Flag-icon-48.png", "/flags/Montenegro-Flag-icon-48.png", 
            "/flags/Serbia-Flag-icon-48.png", "/flags/Slovenia-Flag--48.png" };        
        ActionListener actiondate = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                Random rn = new Random();
                int range = allSubFiles.length - 1 + 1;
                int randomNum = rn.nextInt(range); // + 1;
                jLabel5.setIcon(new ImageIcon(getClass().getResource(allSubFiles[randomNum])));
//                java.util.Date mydate = new java.util.Date();
   
//                SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy hh:mm:ss");
//                String date = sdf.format(new java.util.Date());
//                jLabel4.setText(date);
//                if (mydate.getSeconds() > 10 && mydate.getSeconds() < 20) {
////                SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy hh:mm:ss");
////                String date = sdf.format(new java.util.Date());
////                System.out.println(date); //15/10/2013
//                    jLabel5.setIcon(new ImageIcon(getClass().getResource("/flags/Macedonia-icon-64.png")));
////                    jLabel5.setText(date);
//                } else if (mydate.getSeconds() > 20 && mydate.getSeconds() < 30) {
//                    jLabel5.setIcon(new ImageIcon(getClass().getResource("/flags/Croatia-flat-icon-64.png")));
//                } else if (mydate.getSeconds() > 30 && mydate.getSeconds() < 40) {
//                    jLabel5.setIcon(new ImageIcon(getClass().getResource("/flags/Serbia-Flag-icon-64.png")));
//                } else if (mydate.getSeconds() > 40 && mydate.getSeconds() < 50) {
//                    jLabel5.setIcon(new ImageIcon(getClass().getResource("/flags/Montenegro-icon-64.png")));
//                } else if (mydate.getSeconds() > 50 && mydate.getSeconds() < 60) {
//                    jLabel5.setIcon(new ImageIcon(getClass().getResource("/flags/Bosnian-icon-64.png")));
//                } else if (mydate.getSeconds() > 0 && mydate.getSeconds() < 10) {
//                    jLabel5.setIcon(new ImageIcon(getClass().getResource("/flags/Kosovo-icon-64.png")));
//                }
//                jLabel5.setIcon(new ImageIcon(getClass().getResource("/icone_nove1/wallie.gif")));
            }

        };
        new javax.swing.Timer(1000, actiondate).start();
    }

}
