package maticni.partneri;

import forms_pos.Prijava;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.JOptionPane;
import konekcija.konekcija;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import javax.swing.DefaultComboBoxModel;
import model.ArtikliPakovanja;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import service.MyLogger;
import service.puniComboMaticni;
import static service.uzmiParametar.uzmiParametar;
import static service.vrati_id_za_naziv.vrati_id_za_naziv;
//import static service.vrati_id_za_naziv.vrati_id_za_naziv_artikla;
import static service.vrati_id_za_sifru.vrati_id_za_sifru;
import static service.vrati_sifru_za_id.vrati_sifru_za_id;
//import static service.vrati_id_za_sifru_artikla.vrati_id_za_sifru_artikla;

/**
 *
 * @author ms
 */
public class PartneriRacuni extends javax.swing.JFrame {

    ArrayList<ArtikliPakovanja> pakovanjaArray = new ArrayList<ArtikliPakovanja>();
    Connection conn;
    String tabela, sifraArtikla = "";
    int rekordaUslektu = 0;
    MyLogger ml = new MyLogger();
    private PartneriAzuriranje pa;

    public PartneriRacuni() {

        initComponents();
        MyLogger.logger.info("PartneriRacuni");
        this.setTitle(tabela);
        setLocationRelativeTo(null);
        konekcija n = new konekcija();
        conn = n.konekcija();
        tabela = "partneri_racuni";
        nuliranjeForme();
        PripremaTabelePakovanja(sifraArtikla);

    }

    public PartneriRacuni(final Connection conn, final String tabela, String sifraArtikla, PartneriAzuriranje pa) {

        this.conn = conn;
        this.tabela = tabela;
        this.sifraArtikla = sifraArtikla;
        this.pa = pa;

        initComponents();
        MyLogger.logger.info("PartneriRacuni");
        this.setTitle(tabela);

        setLocationRelativeTo(null);
        nuliranjeFormeBezSifre();
//        PripremaTabelePakovanja(sifraArtikla); sdf
        mSifra.setText(sifraArtikla); 
        filterTxt.setText(sifraArtikla); 
        
        if (!Prijava.getKosam()) {
            UnosBtn.setEnabled(false);
//            IzmenaBtn.setEnabled(false);
//            BrisanjeBtn.setEnabled(false);
            PregledBtn.setEnabled(false);
        }

        mBanka.requestFocus();
//        nuliranjeForme();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        UnosBtn = new javax.swing.JButton();
        filterTxt = new javax.swing.JTextField();
        PregledBtn = new javax.swing.JButton();
        IzlazBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        mId = new javax.swing.JTextField();
        mSifra = new javax.swing.JTextField();
        mNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        mAktivan = new javax.swing.JCheckBox();
        jPanel20 = new javax.swing.JPanel();
        mId1 = new javax.swing.JTextField();
        mBrojTekucegRacuna = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        mBanka = new javax.swing.JComboBox<String>();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        iMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        UnosBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/Files-New-File-icon.png"))); // NOI18N
        UnosBtn.setText("Unos");
        UnosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnosBtnActionPerformed(evt);
            }
        });

        filterTxt.setToolTipText("Pretraga");
        filterTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterTxtKeyReleased(evt);
            }
        });

        PregledBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/print-icon.png"))); // NOI18N
        PregledBtn.setText("Pregled");
        PregledBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PregledBtnActionPerformed(evt);
            }
        });

        IzlazBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icone_nove/Action-exit-icon.png"))); // NOI18N
        IzlazBtn.setText("Izlaz");
        IzlazBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IzlazBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(UnosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(PregledBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(IzlazBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filterTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UnosBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(PregledBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IzlazBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {IzlazBtn, PregledBtn, UnosBtn});

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Naziv:");

        mId.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mId.setEnabled(false);

        mSifra.setEditable(false);
        mSifra.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mSifra.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                mSifraCaretUpdate(evt);
            }
        });
        mSifra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mSifraActionPerformed(evt);
            }
        });
        mSifra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mSifraKeyPressed(evt);
            }
        });

        mNaziv.setEditable(false);
        mNaziv.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Å ifra:");

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Id:");

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Aktivan:");

        mAktivan.setSelected(true);
        mAktivan.setEnabled(false);
        mAktivan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAktivanActionPerformed(evt);
            }
        });

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        mId1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mId1.setEnabled(false);

        mBrojTekucegRacuna.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mBrojTekucegRacuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mBrojTekucegRacunaKeyReleased(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel35.setText("Broj raÄuna:");

        jLabel13.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel13.setText("Banka:");

        mBanka.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mBanka.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mBanka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBankaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel6.setText("Id:");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jLabel13)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mId1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(mBanka, javax.swing.GroupLayout.Alignment.TRAILING, 0, 650, Short.MAX_VALUE)
                        .addComponent(mBrojTekucegRacuna, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(mId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mBanka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mBrojTekucegRacuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mAktivan)
                .addContainerGap(735, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(21, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(166, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mAktivan)
                    .addComponent(jLabel4)))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(37, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mId, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(mSifra, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(mId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(mSifra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        iMessage.setBackground(new java.awt.Color(153, 204, 255));
        iMessage.setForeground(new java.awt.Color(255, 0, 0));
        iMessage.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 849, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(iMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mSifraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mSifraActionPerformed
        // TODO add your handling code here:
//        mDatumCenovnika.requestFocus();
    }//GEN-LAST:event_mSifraActionPerformed

    private void UnosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnosBtnActionPerformed

        iMessage.setText("");

//        DefaultTableModel model = (DefaultTableModel) tblSifre.getModel();

//        if (!DaLiPostojiPakovanje(mSifra.getText(),  vrati_id_za_naziv(conn, "vrste_pakovanja_artikala", mBanka.getSelectedItem().toString()), "1")) {
//            return;
//        }
        
        if (!Validation()) {
            return;
        }

        try {
            String SQLinsertPakovanja = " insert into "
                    + " partneri_racuni ("
                    + " partner_id, partner_sifra, banka_id, banka_sifra, "
                    + " tekuci_racun ) \n"
                    + "values ( ?,?,?,?,?)";

            PreparedStatement stmt
                    = conn.prepareStatement(SQLinsertPakovanja, Statement.RETURN_GENERATED_KEYS);

            int aa = vrati_id_za_sifru(conn, "partneri", mSifra.getText());
            stmt.setInt(1, vrati_id_za_sifru(conn, "partneri", mSifra.getText()));
            stmt.setString(2, mSifra.getText());
            stmt.setInt(3, vrati_id_za_naziv(conn, "banke", mBanka.getSelectedItem().toString()));
            stmt.setString(4, vrati_sifru_za_id(conn, "banke", vrati_id_za_naziv(conn, "banke", mBanka.getSelectedItem().toString())));
            stmt.setString(5, mBrojTekucegRacuna.getText());



            if (uzmiParametar(conn, "debugiranje").equals("1")) {
                System.out.println(stmt);
            }
            int i = stmt.executeUpdate();

            iMessage.setText("Podatak je uspesno dodat ...");
            MyLogger.logger.info("Podatak je uspesno dodat " + mSifra.getText());

        } catch (Exception e) {

            iMessage.setText(e.toString());
            MyLogger.logger.error(e);
        }

//        PripremaTabelePakovanja(mSifra.getText());
        pa.PripremaTabeleBankeRacuni(mSifra.getText());
        nuliranjeForme();
        this.dispose();
    }//GEN-LAST:event_UnosBtnActionPerformed
    public ArrayList<model.Cenovnik> ListSifre(String ValToSearch) {
        ArrayList<model.Cenovnik> usersList = new ArrayList<model.Cenovnik>();
        Statement st;
        ResultSet rs;
        try {
            // Connection con = getConnection();
            st = conn.createStatement();
            String searchQuery = "SELECT * FROM cenovnik WHERE "
                    + "CONCAT(`id`, `sifra`, `datum`) LIKE '%" + ValToSearch + "%'";
            rs = st.executeQuery(searchQuery);
            model.Cenovnik cenovnik;
            while (rs.next()) {
                cenovnik = new model.Cenovnik(rs.getInt("id")); //, rs.getString("sifra"), rs.getDate("datum")
                usersList.add(cenovnik);
            }
        } catch (Exception ex) {
            iMessage.setText(ex.toString());
            ml.logger.error(ex);
        }
        return usersList;
    }

    private void mAktivanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAktivanActionPerformed
        System.out.println(mAktivan.isSelected());
        if (mAktivan.isSelected()) {
            mAktivan.setSelected(true);
        } else {
            mAktivan.setSelected(false);
        }
    }//GEN-LAST:event_mAktivanActionPerformed

    private void filterTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterTxtKeyReleased
        // TODO add your handling code here:
//        String query = filterTxt.getText();
//        filter(query);
//        findUsers();
        iMessage.setText("");

//        punjenjeJtableIPrikazModelaSaUslovom(filterTxt.getText());
        PripremaTabelePakovanja(filterTxt.getText());
        nuliranjeForme();
    }//GEN-LAST:event_filterTxtKeyReleased

    private void PregledBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PregledBtnActionPerformed
        // TODO add your handling code here:
        Thread t1 = new Thread(new Runnable() {
            public void run() {
                try {
                    String mIzvestaj = "opstina.jrxml";
                    Map parameters = new HashMap();
                    parameters.put("id", tabela);
                    if (tabela.equals("opstina")) {
                        mIzvestaj = "opstina.jrxml";
                    } else if (tabela.equals("drzave")) {
                        mIzvestaj = "drzave.jrxml";
                    }
                    String reportPath = service.uzmiParametar.uzmiParametar(conn, "putanja_izvestaja").concat(mIzvestaj);
//                    String reportPath = "C:\\Users\\ms\\Documents\\NetBeansProjects\\gui\\src\\report\\karton1004.jrxml";
                    JasperReport jr = JasperCompileManager.compileReport(reportPath);
                    JasperPrint jp = JasperFillManager.fillReport(jr, parameters, conn);
                    JasperViewer.viewReport(jp, false);
                } catch (JRException ex) {
                    java.util.logging.Logger.getLogger(PartneriRacuni.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        t1.start();
    }//GEN-LAST:event_PregledBtnActionPerformed

    private void IzlazBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IzlazBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_IzlazBtnActionPerformed

    private void mSifraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mSifraKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            try {
                Statement stmt = conn.createStatement();

                String sqlQuery = " select * from artikli where aktivan and sifra = '"
                        + mSifra.getText() + "'";

                ResultSet rs = stmt.executeQuery(sqlQuery);

                while (rs.next()) {
                    mNaziv.setText(rs.getString("naziv"));
                }
            } catch (SQLException ex) {
                iMessage.setText(ex.toString());
                MyLogger.logger.error(ex);
                mSifra.grabFocus();
                mSifra.requestFocus();
            }

            mBanka.requestFocus();
//            mVrstaPakovanjaArtikala.setFocus();
            mBanka.grabFocus();
            mNaziv.repaint();

        }
    }//GEN-LAST:event_mSifraKeyPressed

    private void mBankaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBankaActionPerformed
        // TODO add your handling code here:
                mBrojTekucegRacuna.requestFocus();
    }//GEN-LAST:event_mBankaActionPerformed

    private void mSifraCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_mSifraCaretUpdate
        // TODO add your handling code here:
        try {
            Statement stmt = conn.createStatement();

            String sqlQuery = " select * from partneri where aktivan and sifra = '"
                    + mSifra.getText() + "'";

            ResultSet rs = stmt.executeQuery(sqlQuery);

            while (rs.next()) {
                mNaziv.setText(rs.getString("naziv"));

            }
        } catch (SQLException ex) {
            iMessage.setText(ex.toString());
            MyLogger.logger.error(ex);
            mSifra.grabFocus();
            mSifra.requestFocus();
        }
    }//GEN-LAST:event_mSifraCaretUpdate

    private void mBrojTekucegRacunaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mBrojTekucegRacunaKeyReleased
        // TODO add your handling code here:
//                mNaziv.setText("");
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//
//            try {
//                Statement stmt = conn.createStatement();
//
//                String sqlQuery = " select * from artikli where aktivan and sifra = '"
//                        + mSifra.getText() + "'";
//
//                ResultSet rs = stmt.executeQuery(sqlQuery);
//
//                while (rs.next()) {
//                    mNaziv.setText(rs.getString("naziv"));
//                }
//            } catch (SQLException ex) {
//                iMessage.setText(ex.toString());
//                MyLogger.logger.error(ex.toString());
////                mSifra.grabFocus();
//                mSifra.requestFocus();
//            }

////            mDatumCenovnika.requestFocus();
            UnosBtn.requestFocus(); // .setFocus();
////            mDatumCenovnika.grabFocus();
//
        }
    }//GEN-LAST:event_mBrojTekucegRacunaKeyReleased

    private void filter(String query) {
//        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>((DefaultTableModel) tblSifre.getModel());
//        tblSifre.setRowSorter(tr);
//        tr.setRowFilter(RowFilter.regexFilter(query));
    }

    private void PripremaTabelePakovanja(String id) {

//        pakovanjaArray.clear();
//
//        try {
//
//            String sqlQuery = "SELECT artikli_pakovanja.id, artikli_pakovanja.tippak, \n"
//                    + "artikli_pakovanja.artikal_sifra, \n"
//                    + "artikli_pakovanja.artikal_id, \n"
//                    + "artikli_pakovanja.ean,  artikli_pakovanja.netojm, artikli_pakovanja.brutojm, \n"
//                    + "artikli_pakovanja.sirina,  artikli_pakovanja.visina, artikli_pakovanja.duzina, \n"
//                    + "artikli_pakovanja.komada,  artikli_pakovanja.tezina, artikli_pakovanja.sifra_ambalaze, "
//                    + "vrste_pakovanja_artikala.naziv, ambalaza.naziv, artikli_pakovanja.aktivan \n"
//                    + " FROM artikli_pakovanja \n"
//                    + "LEFT JOIN vrste_pakovanja_artikala ON vrste_pakovanja_artikala.sifra = artikli_pakovanja.tippak \n"
//                    + "LEFT JOIN ambalaza ON ambalaza.sifra = artikli_pakovanja.sifra_ambalaze \n"
//                    + "WHERE \n"
//                    + "artikli_pakovanja.artikal_sifra LIKE '%" + id + "%' AND artikli_pakovanja.aktivan=1 " // `id`,
//                    + "order by artikli_pakovanja.tippak "; // desc
//
//            if (uzmiParametar(conn, "debugiranje").equals("1")) {
//                System.out.println(sqlQuery);
//            }
//
//            PreparedStatement stmt = conn.prepareStatement(sqlQuery);
//            ResultSet rs = stmt.executeQuery(sqlQuery);
//
//            while (rs.next()) {
//
//                ArtikliPakovanja ap = new ArtikliPakovanja();
//                ap.setId(rs.getInt("id"));
//                ap.setArtikalSifra(rs.getString("artikal_sifra"));
//                ap.setTippak(rs.getString("tippak"));
//                ap.setEan(rs.getString("ean"));
//
////                ap.setNaziv(rs.getString("naziv"));
////                ap.setJm(rs.getString("jm"));
//                ap.setNetojm(rs.getBigDecimal("netojm"));
//                ap.setBrutojm(rs.getBigDecimal("brutojm"));
//                ap.setSirina(rs.getBigDecimal("sirina"));
//                ap.setDuzina(rs.getBigDecimal("duzina"));
//                ap.setVisina(rs.getBigDecimal("visina"));
//
//                ap.setKomada(rs.getBigDecimal("komada"));
//                ap.setSifraAmbalaze(rs.getString("sifra_ambalaze"));
//                ap.setAktivan(rs.getBoolean("aktivan"));
//
//                mBanka.setSelectedItem(rs.getString("vrste_pakovanja_artikala.naziv"));
//                mBrojTekucegRacuna.setText(rs.getString("ean"));
//                mAmbalaza.setSelectedItem(rs.getString("ambalaza.naziv"));
//                mSirina.setValue(new AsoftDFP(rs.getDouble("sirina")));
//                mDuzina.setValue(new AsoftDFP(rs.getDouble("duzina")));
//                mVisina.setValue(new AsoftDFP(rs.getDouble("visina")));
//                mKomada.setValue(new AsoftDFP(rs.getDouble("komada")));
//                mNetoUJm.setValue(new AsoftDFP(rs.getDouble("netojm")));
//                mBrutoUJm.setValue(new AsoftDFP(rs.getDouble("brutojm")));
//                mTezina.setValue(new AsoftDFP(rs.getDouble("tezina")));
//                pakovanjaArray.add(ap);
//            }
//
//        } catch (SQLException ex) {
//            MyLogger.logger.info(ex.toString());
//            iMessage.setText(ex.toString());
//        }
//
//        DefaultTableModel model = new DefaultTableModel();
//
////        DefaultTableModel model = (DefaultTableModel) jTableCene.getModel();
//        TableColumnModel tcm = tblSifre.getColumnModel();
//
//        tcm.getColumn(0).setPreferredWidth(20);     //Name
//        tcm.getColumn(1).setPreferredWidth(120);    //Title
//        tcm.getColumn(2).setPreferredWidth(250);    //Surname
//        tcm.getColumn(3).setPreferredWidth(50);    //ID
//        tcm.getColumn(4).setPreferredWidth(50);    //ID
//        tcm.getColumn(5).setPreferredWidth(50);    //ID
//        tcm.getColumn(6).setPreferredWidth(50);    //ID
//        tcm.getColumn(7).setPreferredWidth(50);    //ID
//        tcm.getColumn(8).setPreferredWidth(50);    //ID
//        tcm.getColumn(9).setPreferredWidth(50);    //ID
//        tcm.getColumn(10).setPreferredWidth(50);    //ID
//        tcm.getColumn(11).setPreferredWidth(50);    //ID
//        tcm.getColumn(12).setPreferredWidth(50);    //ID
//        //         
//        model.setColumnIdentifiers(new Object[]{"Id", "Sifra", "Vrsta pakovanja",
//            "Ean", "Netojm",
//            "Brutojm", "Sirina", "Duzina", "Visina", "Komada",
//            "Ambalaza", "Aktivan", "Rbr"});
//        rekordaUslektu = 0;
//        Object[] row = new Object[13];
//        for (int i = 0; i < pakovanjaArray.size(); i++) {
//            row[0] = pakovanjaArray.get(i).getId();
//            row[1] = pakovanjaArray.get(i).getArtikalSifra();
//            row[2] = pakovanjaArray.get(i).getTippak();
//            row[3] = pakovanjaArray.get(i).getEan();
//            row[4] = pakovanjaArray.get(i).getNetojm();
//            row[5] = pakovanjaArray.get(i).getBrutojm();
//            row[6] = pakovanjaArray.get(i).getSirina();
//            row[7] = pakovanjaArray.get(i).getDuzina();
//            row[8] = pakovanjaArray.get(i).getVisina();
//            row[9] = pakovanjaArray.get(i).getKomada();
//            row[10] = pakovanjaArray.get(i).getSifraAmbalaze();
//            row[11] = pakovanjaArray.get(i).getAktivan();
//            row[12] = rekordaUslektu;
//            model.addRow(row);
//            rekordaUslektu++;
//        }
//
//        tblSifre.setModel(model);
//
//        tblSifre.getColumnModel().getColumn(0).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(1).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(2).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(3).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(4).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(5).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(6).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(7).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(8).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(9).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(10).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(11).setCellRenderer(new CustomRenderer(1));
//        tblSifre.getColumnModel().getColumn(12).setCellRenderer(new CustomRenderer(1));
    }


    private void punjenjeJtableIPrikazModelaSaUslovom(String ValToSearch) {

//        DefaultTableModel model = (DefaultTableModel) tblSifre.getModel();
//        TableColumnModel tcm = tblSifre.getColumnModel();
//
//        tcm.getColumn(0).setPreferredWidth(10);     //Name
//        tcm.getColumn(1).setPreferredWidth(10);    //Title
//        tcm.getColumn(2).setPreferredWidth(170);    //Surname
//        tcm.getColumn(3).setPreferredWidth(10);    //ID
//        tcm.getColumn(4).setPreferredWidth(10);    //ID
//        tcm.getColumn(5).setPreferredWidth(10);    //ID
//        tcm.getColumn(6).setPreferredWidth(10);    //ID
//        tcm.getColumn(7).setPreferredWidth(10);    //ID
//        tcm.getColumn(8).setPreferredWidth(10);    //ID
//        tcm.getColumn(9).setPreferredWidth(10);    //ID
////        tcm.getColumn(10).setPreferredWidth(10);    //ID        
////        tcm.getColumn(11).setPreferredWidth(10);    //ID        
//
//        tblSifre.getColumnModel().getColumn(0).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(1).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(2).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(3).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(4).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(5).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(6).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(7).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(8).setCellRenderer(new CustomRenderer(0));
//        tblSifre.getColumnModel().getColumn(9).setCellRenderer(new CustomRenderer(0));
////        tblSifre.getColumnModel().getColumn(10).setCellRenderer(new CustomRenderer(0));
////        tblSifre.getColumnModel().getColumn(11).setCellRenderer(new CustomRenderer(0));
//
////        tblSifre.removeAll();
//        if (model.getRowCount() > 0) {
//            for (int i = model.getRowCount() - 1; i > -1; i--) {
//                model.removeRow(i);
//            }
//        }
//
//        try {
//            String searchQuery = "SELECT * FROM cenovnik  WHERE aktivan and "
//                    + "LOWER(CONCAT(`id`, `sifra`, `datum`, "
//                    + "nabavna_cena, planska_cena, "
//                    + "prodajna_cena, prodajna_cena_sa_pdv, "
//                    + "maloprodajna_cena_bez_pdv, "
//                    + "maloprodajna_cena)) LIKE LOWER('%" + ValToSearch + "%') order by id";
//
//            PreparedStatement stmt = conn.prepareStatement(searchQuery);
//
//            ResultSet rs = stmt.executeQuery(); // searchQuery
//            rekordaUslektu = 0;
//            while (rs.next()) {
//                mId.setText(rs.getString(1));
//                mSifra.setText(rs.getString(2));
//                mNaziv.setText(rs.getString(3));
////                    int cetvrti = rs.getInt(5);
//                boolean mmAktivan = (rs.getInt(5) == 1) ? true : false;
//
//                mAktivan.setSelected(mmAktivan);
////                    if (rs.getInt(4))
//                model.addRow(new Object[]{mId.getText(), mSifra.getText(), mNaziv.getText(), mmAktivan, rekordaUslektu});
//                rekordaUslektu++;
//            }
//            mId.setText("");
//            mSifra.setText("");
//            mNaziv.setText("");
//            mAktivan.setSelected(true);
//
//        } catch (SQLException ex) {
//            MyLogger.logger.error(ex);
//            iMessage.setText(ex.toString());
//        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PartneriRacuni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PartneriRacuni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PartneriRacuni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PartneriRacuni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PartneriRacuni().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton IzlazBtn;
    private javax.swing.JButton PregledBtn;
    private javax.swing.JButton UnosBtn;
    private javax.swing.JTextField filterTxt;
    private javax.swing.JLabel iMessage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox mAktivan;
    private javax.swing.JComboBox<String> mBanka;
    private javax.swing.JTextField mBrojTekucegRacuna;
    private javax.swing.JTextField mId;
    private javax.swing.JTextField mId1;
    private javax.swing.JTextField mNaziv;
    private javax.swing.JTextField mSifra;
    // End of variables declaration//GEN-END:variables

    private int vratiJedanIliNula(boolean selected) {
        if (selected) {
            return 1;
        } else {
            return 0;
        }
    }

    private void nuliranjeForme() {

        UnosBtn.setEnabled(true);

        mId.setText("");
        mNaziv.setText("");
        mSifra.setText("");
        mBrojTekucegRacuna.setText("");

        List<String> listVrstaPakovanja = puniComboMaticni.puni_maticne(conn, "banke");
        mBanka.setModel(new DefaultComboBoxModel(listVrstaPakovanja.toArray()));

//        List<String> listAmbalaza = puniComboMaticni.puni_maticne(conn, "ambalaza");
//        mAmbalaza.setModel(new DefaultComboBoxModel(listAmbalaza.toArray()));
//
//        mTezina.setValue(NULA);
//        mNetoUJm.setValue(NULA);
//        mBrutoUJm.setValue(NULA);
//        mKomada.setValue(NULA);
//        mSirina.setValue(NULA);
//        mDuzina.setValue(NULA);
//        mVisina.setValue(NULA);

        mAktivan.setSelected(true);
//        filterTxt.setText("");

    }
    
    private void nuliranjeFormeBezSifre() {

        UnosBtn.setEnabled(true);

        mId.setText("");
        mNaziv.setText("");
//        mSifra.setText("");
        mBrojTekucegRacuna.setText("");

        List<String> listVrstaPakovanja = puniComboMaticni.puni_maticne(conn, "banke");
        mBanka.setModel(new DefaultComboBoxModel(listVrstaPakovanja.toArray()));

//        List<String> listAmbalaza = puniComboMaticni.puni_maticne(conn, "ambalaza");
//        mAmbalaza.setModel(new DefaultComboBoxModel(listAmbalaza.toArray()));

//        mTezina.setValue(NULA);
//        mNetoUJm.setValue(NULA);
//        mBrutoUJm.setValue(NULA);
//        mKomada.setValue(NULA);
//        mSirina.setValue(NULA);
//        mDuzina.setValue(NULA);
//        mVisina.setValue(NULA);

        mAktivan.setSelected(true);
//        filterTxt.setText("");

    }    

    private boolean Validation() {

        if (mSifra.getText().equals("") || mSifra.getText().isEmpty()) {
            MyLogger.logger.error("Å ifra nesme biti prazna ...");
            iMessage.setText("Å ifra nesme biti prazna ...");
            return false;
        }
//        if (mNaziv.getText().equals("") || mNaziv.getText().isEmpty()) {
//            MyLogger.logger.error("Naziv nesme biti prazna ...");
//            iMessage.setText("Naziv nesme biti prazna ...");
//            return false;
//        }

        return true;
    }

    private boolean DaLiPostojiPakovanje(String sifra, Integer vrstaPakovanja, String aktivan) {

        try {
            Statement stmt = conn.createStatement();

            String sqlQuery = " select * from artikli_pakovanja where artikal_sifra = '" + sifra + "' and  " + aktivan + " and tippak = '"
                    + vrstaPakovanja + "'";

            ResultSet rs = stmt.executeQuery(sqlQuery);

            while (rs.next()) {
                mNaziv.setText(rs.getString("naziv"));

            }
        } catch (SQLException ex) {
            iMessage.setText(ex.toString());
            MyLogger.logger.error(ex);
            mSifra.grabFocus();
            mSifra.requestFocus();
        }
        return true;
    }    
    
}
